comment = NA,...)
library(SMRD)
}},
'shinyace'  = {
if(is.null(name)) stop('`name` must be specified for type = shinyace')
function() {
paste(c(noquote(name),'<- '),sep = ' ')
function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"), includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename", mode = "r", theme = "github", height = "450px",
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; paste(c(noquote(name),'()'), sep = '')
teachingApp(name, envir = environment(), publish = publish)
}})
if(tolower(type) == 'first'    | tolower(type) == 'last'  )  chunk()
if(tolower(type) == 'shinyace' | tolower(type) == 'navbar')  chunk
}
chunky('shinyace')
chunky('shinyace', name = 'stuff')
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,name = NULL,...)  {
chunk <- switch(tolower(type),
'first' = {function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}},
'last'  = {function() {
shiny::HTML(
"<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'>
<script src='js/audiojs/audiojs/audio.min.js'></script>
<script> audiojs.events.ready(function() {audiojs.createAll();}); </script>
<script src='js/jkf-scroll.js'></script>")}},
'vignette'  = {function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)
}},
'shinyace'  = {
if(is.null(name)) stop('`name` must be specified for type = shinyace')
function() {
paste(c(noquote(name),'<- '),sep = ' ')
function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"), includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename", mode = "r", theme = "github", height = "450px",
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; paste(c(noquote(name),'()'), sep = '')
teachingApp(name, envir = environment(), publish = publish)
}})
if(tolower(type) == 'first'    | tolower(type) == 'last'  )  chunk()
if(tolower(type) == 'shinyace' | tolower(type) == 'navbar')  body(chunk)
}
chunky('shinyace', name = 'stuff')
devtools::install_github('Auburngrads/jkf')
type <- 'vinny'
type <- c('vinny','joe')
stuff <- 'jeff'
stuff <- 'joe'
stuff==type
stuff%in%type
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
chunk <- switch(tolower(type),
'first' = {function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}},
'last'  = {function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'>
<script src='js/audiojs/audiojs/audio.min.js'></script>
<script> audiojs.events.ready(function() {audiojs.createAll();}); </script>
<script src='js/jkf-scroll.js'></script>")}},
'vignette'  = {function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)
}},
'shinyace'  = {
function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}})
if(tolower(type)%in%c('first','last','vignette'))  chunk()
if(tolower(type)%in%c('shinyace','navbar'))        chunk
}
chunky
jkf::JKF()
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
chunk <- switch(tolower(type),
'first' = {function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}},
'last'  = {function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'>
<script src='js/audiojs/audiojs/audio.min.js'></script>
<script> audiojs.events.ready(function() {audiojs.createAll();}); </script>
<script src='js/jkf-scroll.js'></script>")}},
'vignette'  = {function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)
}},
'shinyace'  = {
function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}})
if(tolower(type)%in%c('first','last','vignette'))  gsub('\n','',chunk())
if(tolower(type)%in%c('shinyace','navbar'))        chunk
}
chunky(type = 'last')
str(chunky(type = 'last'))
jkf::JKF()
shiny::HTML(gsub('\n','',"<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'>
<script src='js/audiojs/audiojs/audio.min.js'></script>
<script> audiojs.events.ready(function() {audiojs.createAll();}); </script>
<script src='js/jkf-scroll.js'></script>"))
jkf::JKF()
jkf::chunky
jkf::chunky
jkf::JKF()
jkf::chunky(type = 'last')
str(jkf::chunky(type = 'last'))
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
chunk <- switch(tolower(type),
'first' = {function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}},
'last'  = {function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'><script src='js/audiojs/audiojs/audio.min.js'></script><script> audiojs.events.ready(function() {audiojs.createAll();}); </script><script src='js/jkf-scroll.js'></script>")}},
'vignette'  = {function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)
}},
'shinyace'  = {
function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}})
if(tolower(type)%in%c('first','last','vignette'))  eval(chunk())
if(tolower(type)%in%c('shinyace','navbar'))        chunk
}
chunky(type = 'last')
jkf::JKF()
stay <- 'john'
tolower(stay)
stay
str(stay)
str(tolower(stay))
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
switch(type,
'first' = {
first <- function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}
first()
},
'last'  = {
last <- function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'><script src='js/audiojs/audiojs/audio.min.js'></script><script> audiojs.events.ready(function() {audiojs.createAll();}); </script><script src='js/jkf-scroll.js'></script>")}
last()
},
'vign'  = {
vignette <-  function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)}
vign()
},
'shinyace'  = {
shace <- function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}
shace()
})
#if(type%in%c('first','last','vignette'))  chunk()
i#f(type%in%c('shinyace','navbar'))        chunk
}
chunky()
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
switch(type,
'first' = {
first <- function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)}
first()
},
'last'  = {
last <- function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'><script src='js/audiojs/audiojs/audio.min.js'></script><script> audiojs.events.ready(function() {audiojs.createAll();}); </script><script src='js/jkf-scroll.js'></script>")}
last()
},
'vign'  = {
vignette <-  function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)}
vign()
},
'shinyace'  = {
shace <- function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}
shace()
})
#if(type%in%c('first','last','vignette'))  chunk()
#if(type%in%c('shinyace','navbar'))        chunk
}
chunky()
jkf::JKF()
rm(list = ls())
jkf::JKF()
jkf::JKF()
chunky <-
function(type = 'first', dynamic = TRUE, publish = TRUE,fw = 6, fh = 4,...)  {
switch(type,
'first' = {
first <- function() {
assign('dynamic', dynamic,envir = sys.frame(),immediate = TRUE)
assign('publish', publish,envir = sys.frame(),immediate = TRUE)
library(SMRD)
library(xtable)
library(jkf)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, echo = FALSE, results = 'asis',...)
knitr::knit_hooks$set(par=function(before, options, envir){
if (before && options$fig.show!='none')
par(mar=c(4,4,.1,.1),cex.lab=1.05,cex.axis=1.05,mgp=c(2.25,.7,0),tcl=-.3,
font.lab=2,font=2,font.axis=2,las=1,tck=0.015,family='serif')
})}
first()
},
'last'  = {
last <- function() {
shiny::HTML("<link rel='stylesheet' type='text/css' href='css/flat-slidy.css'><script src='js/audiojs/audiojs/audio.min.js'></script><script> audiojs.events.ready(function() {audiojs.createAll();}); </script><script src='js/jkf-scroll.js'></script>")}
last()
},
'vign'  = {
vignette <-  function() {
knitr::opts_chunk$set(message = FALSE,
warning = FALSE,
fig.align = 'center',
fig.width = fw,
fig.height = fh,
comment = NA,...)
library(SMRD)}
vign()
},
'shinyace'  = {
shace <- function() {
ace_name <- function(...) {
library(shiny)
shinyApp(options = list(height = "600px"),
ui = fluidPage(theme = shinythemes::shinytheme("flatly"),
includeCSS('css/my-shiny.css'),
sidebarLayout(
sidebarPanel(
shinyAce::aceEditor("acename",
mode = "r",
theme = "github",
height = "450px",
fontSize = 14,
value = "paste code here"),
actionButton("actionname", h4("Evaluate"), width = '100%')),
mainPanel(plotOutput("plotname", height = "600px")))),
server = function(input, output, session) {
output$plotname <- renderPlot({
par(oma = c(0,0,0,0), mar = c(4,4,2,2))
input$actionname
return(isolate(eval(parse(text=input$acename))))
})
})
} ; ace_name()
teachingApp('ace_name', envir = environment(), publish = publish)
}
shace()
})
#if(type%in%c('first','last','vignette'))  chunk()
#if(type%in%c('shinyace','navbar'))        chunk
}
chunky()
jkf::JKF()
par()
unlist(par())
str(unlist(par()))
str(par())
str(par()[[1]])
str(str(par()))
str(par())[[1]]
str(par()[[1:3]])
str(par()[1:3])
rpare
joe <- function(par()) { }
list(par())
attributes(par())
joe <- function(attributes(par())) { }
unlist(attributes(par()))
str(unlist(attributes(par())))
joe <- function(unlist(attributes(par()))) { }
jkf.par <- function(...) {
par(cex.lab=1.05,
cex.axis=1.05,
mgp=c(2.25,.7,0),
tcl=-.3,
font.lab=2,
font=2,
font.axis=2,
las=1,
tck=0.015,
family='serif',...)
}
jkf.par(cex.lab=4)
par()
jkf.par(cex.lab=1)
jkf::JKF()
?evalq
getNamespaceExports('knitr')
options()
options$verbatim
options()$verbatim
options()$verbatim <- TRUE
options(verbatim) <- TRUE
?options
options('verbatim'=TRUE)
jkf::JKF()
